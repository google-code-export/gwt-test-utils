#summary This page explains how to use gwt-test-utils

= With Maven =

== Pom configuration ==

First, you have to setup the required dependency in the _pom.xml_ :

{{{
<dependencies>
   ...
   <dependency>
      <groupId>com.octo.gwt.test</groupId>
      <artifactId>gwt-test-utils</artifactId>
      <version>0.16</version>
      <scope>test</scope>
   </dependency>
   ...
</dependencies>   
}}}

If you want to run integration tests with _gwt-test-utils_ scenario writer feature, you would have to setup another dependency : 

{{{
<dependencies>
   ...
   <dependency>
      <groupId>com.octo.gwt.test</groupId>
      <artifactId>gwt-test-utils-integration</artifactId>
      <version>0.16</version>
      <scope>test</scope>
   </dependency>
   ...
</dependencies>   
}}}

Note that {{{gwt-test-utils-integration}}} module directly depends on {{{gwt-test-utils}}}, so you don't need to declare the first dependency in your {{{pom.xml}}}.

In the two cases, you will also have to specify the gwt-test-utils Maven repository :

{{{
<repositories>
   ...
   <repository>
      <id>forge.octo.com</id>
      <url>http://forge.octo.com/nexus/content/repositories/releases/</url>
   </repository>
</repositories>
}}}

Since gwt-test-utils is memory expensive (to test GWT in a simple JVM has a cost ;-)), you  should increase the memory available for your tests, as shown in this example :

{{{
<plugins>
   ...
   <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <configuration>
         <argLine>-XX:MaxPermSize=128M -Xmx512M</argLine>
      </configuration>
   </plugin>
</plugins>
}}}

== Under eclipse, on a maven project ==

To run your unit tests directly inside eclipse in a maven project, you should use the POM configurations explained above (dependency, repository and plugin configuration).

Then, just open a new JUnit Run configuration, and specify in the "JVM Arguments" text area the amount of memory you'll need for your tests.

= Without Maven =

To run your GWT unit tests without Maven, just add the gwt-test-utils-x.jar to the classpath :-)

The needed jars are available through 
 <a href="http://www.octo.com">Octo Technology</a>.

[http://forge.octo.com/nexus/content/repositories/releases/com/octo/gwt/test/ gwt-test-utils repository]
<a href="http://forge.octo.com/nexus/content/repositories/releases/com/octo/gwt/test/">gwt-test-utils repository</a>, which is provided by Octo Technology.