<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- POM generated by gwt-maven-plugin archetype -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.octo.gwt.test</groupId>
	<artifactId>gwt-test-utils-demo</artifactId>
	<packaging>war</packaging>
	<version>0.26-SNAPSHOT</version>
	<name>GWT Tests Utils Demo application</name>

	<properties>

		<!-- convenience to define GWT version in one place -->
		<gwt.version>2.2.0</gwt.version>

		<!-- gwt maven plugin version -->
		<gwt.maven.plugin.version>2.2.0</gwt.maven.plugin.version>

		<gwt.test.utils.version>${project.version}</gwt.test.utils.version>

		<slf4j.version>1.6.1</slf4j.version>

		<!-- gwt exploded war root package -->
		<gwt.war.path>${basedir}/target/war</gwt.war.path>

		<!-- tell the compiler we can use 1.6 -->
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>

	</properties>

	<repositories>
		<!-- octo release repository -->
		<repository>
			<id>forge.octo.com</id>
			<url>http://forge.octo.com/nexus/content/repositories/releases/</url>
		</repository>
		<!-- octo snapshot repository -->
		<repository>
			<id>snapshot-forge.octo.com</id>
			<url>http://forge.octo.com/nexus/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>

	<dependencies>

		<!-- GWT dependencies (from central repo) -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>com.octo.gwt.test</groupId>
			<artifactId>gwt-test-utils-csv</artifactId>
			<version>${gwt.test.utils.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

	</dependencies>

	<build>
		<!-- set compiled class to the GWT exploded war location to get the hosted 
			mode working -->
		<outputDirectory>${gwt.war.path}/WEB-INF/classes</outputDirectory>

		<!-- add src/integration-test/resources as a test resource directory -->
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/integration-test/resources</directory>
			</testResource>
		</testResources>

		<!-- gwt-maven plugin configuration to get the application running with 
			full configured backend -->
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.maven.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>generateAsync</goal>
							<goal>mergewebxml</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<runTarget>demo/Application.html</runTarget>
					<hostedWebapp>${gwt.war.path}</hostedWebapp>
					<mergedWebXml>${gwt.war.path}/WEB-INF/web.xml</mergedWebXml>
					<extraJvmArgs>-Xmx512m</extraJvmArgs>
				</configuration>
			</plugin>

			<!-- add src/integration-test/java as a source directory to be able to 
				launch integration-test directly in your IDE -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>add-integration-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/integration-test/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>

			<!-- add memory to the maven test plugin because gwt-test-utils can be 
				expensive for big projects -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-XX:MaxPermSize=128M -Xmx512M</argLine>
				</configuration>
			</plugin>

			<!-- add the jetty plugin to test the full compiled JS application with 
				the 'jetty:run-war' goal -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.5</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>no-gwt-compile</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<version>${gwt.maven.plugin.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
